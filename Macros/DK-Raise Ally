The idea was to make a Macro that casts Raise Ally on a mouseover target if certain contidions are met, and only announce it if said conditions are met.

A bit clunkly and sloppy, but it was a very old Macro.




Didn't quite work properly
--------------

/use [@mouseover,help,dead] Raise Ally
/stopmacro [@mouseover,nohelp][@mouseover,nodead]
/run local c=IsInGroup(2)and "INSTANCE_CHAT" or IsInRaid()and "RAID" or IsInGroup()and "PARTY" if c then SendChatMessage("Brezzing "..UnitName("mouseover"),c)end



Too convoluted of a solution
--------------

/run if not RaiseAllyNotifier then local f, S, T = CreateFrame("Frame", "RaiseAllyNotifier"), GetSpellInfo(61999) f:RegisterUnitEvent("UNIT_SPELLCAST_SENT","player") f:RegisterUnitEvent("UNIT_SPELLCAST_SUCCEEDED","player") f:SetScript("OnEvent", function(_, e, _, n, _, t) if n == S then if type(t) == "string" then T = t else SendChatMessage("XXXXXXXXXXXXXXXXXX", "INSTANCE_CHAT", nil, T) end end end) end




Working but not Quite there yet
--------------

#Showtooltip Raise Ally
/run if GetSpellCooldown"Raise Ally" ==0 and UnitInRange("mouseover") then SendChatMessage("Casting "..GetSpellLink(61999).." on "..UnitName"mouseover",IsInGroup(2) and "INSTANCE_CHAT" or IsInRaid() and "RAID" or "PARTY") end
/use [@mouseover,help,dead] Raise Ally






Latest Version
--------------
#Showtooltip Raise Ally
/run if GetSpellCooldown"Raise Ally" ==0 and UnitInRange("mouseover") then SendChatMessage("Casting "..GetSpellLink(61999).." on "..UnitName"mouseover",IsInGroup(2) and "INSTANCE_CHAT" or IsInRaid()and "RAID" or IsInGroup()and "PARTY") end
/use [@mouseover,help,dead] Raise Ally



